@page "/meetups/create"

@attribute [Authorize]

@using WhenAndWhere.BL.Services
@using WhenAndWhere.BL.DTOs
@using Microsoft.AspNetCore.Identity
@using WhenAndWhere.DAL.Models

@inject MeetupService MeetupService
@inject UserMeetupService UserMeetupService
@inject NavigationManager NavigationManager
@inject UserManager<User> UserManager
@inject SignInManager<User> SignInManager

<StyledRow Inner="false">
    <h1>Create</h1>

    <h4>Meetup</h4>
</StyledRow>

<hr />

<StyledRow Inner="true">
    <ValidationPopup IsActive="@popup.Item1" ErrorMessage="@popup.Item2" OnClose="() => popup = (false, string.Empty)" />

    @* TODO: OnSubmit -> OnValidSubmit *@
    <EditForm Model="meetup" OnSubmit="CreateMeetup">
        <DataAnnotationsValidator />

        <div class="form-group">
            <label class="control-label">Title:</label>
            <InputText class="form-control" @bind-Value="meetup.Name" placeholder="title" />
            <ValidationMessage For="() => meetup.Name" />
        </div>
        
        <div class="form-group">
            <label class="control-label">Description:</label>
            <InputTextArea class="form-control" @bind-Value="meetup.Description" placeholder="description" />
            <ValidationMessage For="() => meetup.Description" />
        </div>

        <input type="submit" class="form-control col-3 my-2 btn btn-secondary" value="Create" />
        <input type="reset" class="form-control col-3 my-2 btn btn-secondary" value="Clear" />
    </EditForm>
</StyledRow>

<hr />

@code {
    private MeetupDTO meetup;

    private (bool, string) popup;

    protected override void OnInitialized()
    {
        meetup = new MeetupDTO();
        base.OnInitialized();
    }

    private async Task CreateMeetup()
    {
        var currentUser = Int32.Parse(UserManager.GetUserId(SignInManager.Context.User));
        meetup.OwnerId = currentUser;
        UserMeetupDTO userMeetup = new UserMeetupDTO { UserId = currentUser, MeetupId = meetup.Id };
        
        //TODO: Should be merged into one transaction
        await MeetupService.Create(meetup);
        await UserMeetupService.Create(userMeetup);

        NavigationManager.NavigateTo($"/meetups/{meetup.Id}/view");
    }
}
